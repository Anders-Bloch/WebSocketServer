package dk.tb.handlers.impl;

import java.io.IOException;
import java.net.URLDecoder;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import dk.tb.clients.Client;
import dk.tb.factories.PoolAndClientFactory;

public class IFrameRequestHandler extends AbstractRequestHandler {
	
	private final Logger logger = LoggerFactory.getLogger(IFrameRequestHandler.class);

	public IFrameRequestHandler(PoolAndClientFactory factory) {
		super(factory);
	}

	@Override
	public void handleRun() throws IOException {
		if(path.contains("/iFrame?text")) {
			String text = URLDecoder.decode(path.substring(path.indexOf("text=")+5, path.length()));
			logger.info("IFrame - text update event: " + text);
			pool.callAll(text);
			out.write("HTTP/1.1 200 OK\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Length: 0\r\nConnection: Keep-Alive\r\n\r\n".getBytes());
			out.flush();
			socket.close();
		} else if(path.contains("/iFrame?Connect")) {
			logger.info("New client added");
			Client client = factory.getNewClient(socket);
			pool.addClient(client);
			StringBuilder result = new StringBuilder();
			result.append("HTTP/1.1 200 OK\r\nContent-Type: text/html; charset=utf-8\r\nConnection: Keep-Alive\r\nTransfer-Encoding: chunked\r\n\r\n");
			String message = "<script type='text/javascript'>window.parent.addInput('Connected')\r\n" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"//482348298349828348n2 438 238489028934809823948 2 49892483098 24 8 214388 2348 82 8430 9 2438 9823984908293489821934890820943892184982398498598349859823  85 832859823945098349 853 829834985 8324 50823495983 904509832904 58 35834 58 3 58308458235" +
					"\r\n</script>";
			String size = Integer.toHexString(message.getBytes().length);
			result.append(size);
			result.append("\r\n");
			result.append(message);
			result.append("\r\n");
			logger.info(result.toString());
			out.write(result.toString().getBytes());
			out.flush();
		}
	}
}
